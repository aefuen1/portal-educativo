{"version":3,"sources":["actionCreators.ts","components/Pokemon.tsx","components/Search.tsx","App.tsx","store.ts","index.tsx"],"names":["setPokemon","payload","type","connect","state","name","id","height","weight","img","types","stats","abilities","dispatch","props","jsUcfirst","string","charAt","toUpperCase","slice","className","src","alt","Container","fluid","map","item","i","Row","Col","sm","value","Button","onClick","clearAll","variant","Search","Form","inline","Label","htmlFor","srOnly","InputGroup","Control","onChange","handleSearch","search","placeholder","submit","icon","faSearch","searchPokemon","axios","get","then","data","catch","error","fetchPokemon","clearRedux","useState","isSearching","timer","setState","passingProps","Spinner","animation","e","preventDefault","target","trim","toLowerCase","href","defaultState","store","createStore","forms","ability","stat","base_stat","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d18ddf43.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nfunction fetchPokemon(search:string) {\r\n    return function(dispatch:any){\r\n      return axios.get(`https://pokeapi.co/api/v2/pokemon/${search}`)\r\n                .then(({data}) => {\r\n                    dispatch(setPokemon(data));\r\n                })\r\n                .catch(function(error){\r\n                    //die\r\n                });\r\n    };\r\n  }\r\n\r\nconst setPokemon = (payload:any) => {\r\n    return{\r\n        type: \"MAKE_SEARCH\",\r\n        payload\r\n    }\r\n}\r\n\r\nconst clear = () =>{\r\n    return{\r\n        type:\"CLEAR\"\r\n    };\r\n}\r\n\r\nexport {fetchPokemon, clear};","import { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props{\r\n    clearAll: () => void;\r\n    name:string;\r\n    id:number;\r\n    height:number;\r\n    weight:number;\r\n    img:string;\r\n    types:string[];\r\n    stats: {name:string, value:number}[];\r\n    abilities: string[];\r\n}\r\n\r\nconst Pokemon:any = (props:Props) => {\r\n    function jsUcfirst(string:string){\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    function click(){\r\n        props.clearAll();\r\n    }\r\n    return(\r\n        <section id=\"pokemon\">\r\n            <div className=\"d-flex flex-row justify-content-around align-items-center\">\r\n            <h2>{jsUcfirst(props.name)}</h2>\r\n            <img className=\"w-25 img-fluid\" src={props.img} alt={props.name} />\r\n            </div>\r\n            <Container fluid >\r\n            {\r\n                props.stats.map( (item,i) =>( \r\n                    <Row key={`key-${i}`}>\r\n                        <Col sm={6}><h5>{jsUcfirst(item.name)}</h5></Col>\r\n                        <Col sm={6}><p>{item.value}</p></Col>  \r\n                    </Row>\r\n                ))\r\n            }\r\n            </Container>\r\n            <Button onClick={click} variant=\"success\">Search Again!</Button>\r\n        </section>\r\n    );\r\n}\r\n\r\ninterface State{\r\n    name:string;\r\n    id:number;\r\n    height:number;\r\n    weight:number;\r\n    img:string;\r\n    types:string[];\r\n    stats: (string|number)[];\r\n    abilities: string[];\r\n}\r\n\r\nconst mapStateToProps = (state:State) =>{\r\n    return{\r\n        name:state.name,\r\n        id:state.id,\r\n        height:state.height,\r\n        weight:state.weight,\r\n        img:state.img,\r\n        types:state.types,\r\n        stats: state.stats,\r\n        abilities: state.abilities\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any) =>{\r\n    return{\r\n        \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Pokemon);","import { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport '../css/App.sass';\r\n\r\ninterface Props{\r\n    search:string;\r\n    handleSearch: (e:React.ChangeEvent<HTMLInputElement>) => void;\r\n    submit:(e:any) => void;\r\n}\r\n\r\nconst Search = (props:Props) => {\r\n    return(\r\n        <div className=\"search-container\">\r\n        <h2>Time to search for your pokemon!</h2>\r\n        <Form inline className=\"d-flex flex-row justify-content-center align-items-center\">\r\n            <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                Search\r\n            </Form.Label>\r\n            <InputGroup className=\"w-50\">\r\n                <Form.Control onChange={props.handleSearch} value={props.search} className=\"rounded-0\" id=\"inlineFormInputGroup\" placeholder=\"Example: venusaur, charizard...\" />\r\n            </InputGroup>\r\n            <Button onClick={props.submit} className=\"rounded-0\" type=\"submit\" variant=\"secondary\"><FontAwesomeIcon icon={faSearch}/></Button>\r\n        </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, {useState} from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { clear, fetchPokemon } from './actionCreators';\nimport Pokemon from './components/Pokemon';\nimport Search from './components/Search';\nimport \"./css/App.sass\";\n\n\ninterface Props{\n  name:string\n  searchPokemon: (search:string) => void;\n  clearRedux: () => void;\n}\n\nconst App:any = (props:Props) => {\n\n  let [state, setState] = useState({\n    search:\"\",\n    isSearching: false,\n    timer:false\n  });\n\n  const clearAll = () => {\n    props.clearRedux();\n    setState({\n      search:\"\",\n      isSearching: false,\n      timer:false\n    });\n  }\n\n  const handleSearch = (e:React.ChangeEvent<HTMLInputElement>) =>{\n    e.preventDefault();\n    setState({\n      search:e.target.value,\n      isSearching:false,\n      timer:false\n    });\n  }\n  const passingProps = {\n    clearAll\n  }\n  const submitClick = (e:any) => {\n    e.preventDefault();\n    props.searchPokemon(state.search.trim().toLowerCase());\n    setState(\n      {search:\"\",\n      isSearching: true,\n      timer:false}\n    );\n  }\n\n  return (\n    <div className=\"App\">\n    <div className=\"app-child\">\n      <header>\n        <h1>PokePlace</h1>\n      </header>\n      <main className={`main-container rounded`}>\n        {props.name && state.isSearching?\n            <Pokemon {...passingProps}/>\n          : !props.name && state.isSearching ?\n            <div className=\"failed-connect\">\n              <Spinner animation=\"border\"/>\n              <p>If this take too long you might have no internet or have wrongly written the pokemon's name!</p>\n              <Button id=\"clear-button\" onClick={clearAll} variant=\"success\">Try Again!</Button>\n            </div>\n          :  <Search\n              search={state.search}\n              handleSearch={handleSearch}\n              submit={submitClick}\n            />\n        }\n      </main>\n      <footer>\n        <a href=\"https://github.com/aefuen1\">&copy; Andres Fuentes</a>\n      </footer>\n    </div>\n    </div>\n  );\n}\n\n\ninterface State{\n    name:string\n}\n\nconst mapStateToProps = (state:State) =>{\n  return{\n    name: state.name\n  };\n}\n\nconst mapDispatchToProps = (dispatch:any) => {\n  return {\n    searchPokemon: (search:string) => {\n      dispatch(fetchPokemon(search));\n    },\n    clearRedux: () =>{\n      dispatch(clear());\n    }\n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\ninterface action{\r\n    type:string;\r\n    payload:any;\r\n}\r\ninterface defState{\r\n    name:string;\r\n    id:number;\r\n    height:number;\r\n    weight:number;\r\n    img:string;\r\n    types:string[];\r\n    stats: {name:string, value:number}[];\r\n    abilities: string[];\r\n}\r\n\r\nconst defaultState = {\r\n    name:\"\",\r\n    id: 0,\r\n    height: 0,\r\n    weight: 0,\r\n    img:\"\",\r\n    types: [],\r\n    stats: [],\r\n    abilities: []\r\n}\r\n\r\nfunction reducer (state:defState = defaultState, {type, payload}:action ) {\r\n    if(type === \"MAKE_SEARCH\"){\r\n        return{\r\n            ...state,\r\n            name: payload.forms[0].name,\r\n            id: payload.id,\r\n            height: payload.height,\r\n            weight: payload.weight,\r\n            img: `https://pokeres.bastionbot.org/images/pokemon/${payload.id}.png`,\r\n            types: payload.types.map( (item:any) => item.type.name),\r\n            abilities: payload.abilities.map((item:any) => item.ability.name),\r\n            stats: payload.stats.map( (item:any) => {\r\n                return{\r\n                    name: item.stat.name,\r\n                    value: item.base_stat\r\n                };\r\n            })\r\n        }\r\n    }else if(type === \"CLEAR\"){\r\n        return{\r\n            ...state,\r\n            name:\"\",\r\n            id: 0,\r\n            height: 0,\r\n            weight: 0,\r\n            img:\"\",\r\n            types: [],\r\n            stats: [],\r\n            abilities: []\r\n        };\r\n    }else{\r\n        return {...state};\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}